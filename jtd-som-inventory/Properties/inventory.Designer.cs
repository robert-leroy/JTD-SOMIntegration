//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace jtd_som_inventory.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.4.0.0")]
    internal sealed partial class inventory : global::System.Configuration.ApplicationSettingsBase {
        
        private static inventory defaultInstance = ((inventory)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new inventory())));
        
        public static inventory Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
        -- Select the Inventory Adjustment Serial File
        SELECT tmp.ImportSet AS ImportSet
        , tmp.ItemID AS ItemID
        , RTRIM(s.SRLNBR) As SerialNumber
        , 0 AS DimensionID
        FROM (SELECT ROW_NUMBER() OVER (ORDER BY d.INVNBR, d.INVSEQ, d.INVDTLSEQ) AS ImportSet
        , d.INVNBR
        , d.INVSEQ
        , d.INVDTLSEQ
        , RTRIM(d.ITMMDL) AS ItemID
        , d.SHPQTY AS AdjAmount
        , NULL AS NewQtyOnHand
        , d.ORDUOM AS UnitOfMeasure
        , d.UNTCST AS Cost
        , 0 AS Revision
        FROM SOM_SomShipmentDetail d JOIN SOM_SomShipmentHeader h ON h.INVNBR = d.INVNBR AND h.INVSEQ = d.INVSEQ
        JOIN inv_mast i on d.ITMMDL = i.item_id
        WHERE h.INVTYP = 'IV' AND (d.WHS = 'OHT' or d.WHS = 'ILT')) tmp
        JOIN SOM_SomShipmentSerial s on tmp.invnbr = s.invnbr and tmp.invseq = s.invseq and tmp.invdtlseq = s.invdtlseq
        WHERE ImportSet = ? AND ItemID = #")]
        public string SqlQuerySerialLine {
            get {
                return ((string)(this["SqlQuerySerialLine"]));
            }
            set {
                this["SqlQuerySerialLine"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
        -- Select the Inventory Adjustment Item File
        SELECT ROW_NUMBER() OVER (ORDER BY d.INVNBR, d.INVSEQ, d.INVDTLSEQ) AS ImportSet
        , RTRIM(d.ITMMDL) AS ItemID
        , d.SHPQTY AS AdjAmount
        , NULL AS NewQtyOnHand
        , IIF((d.WHS = 'OHT' or d.WHS = 'ILT'), '10', '10224') AS SourceLocationID
        , IIF((d.WHS = 'OHT' or d.WHS = 'ILT'), '10', '10224') AS ShipLocationID
        , d.ORDUOM AS UnitOfMeasure
        , d.UNTCST AS Cost
        , 0 AS Revision
        FROM SOM_SomShipmentDetail d
        JOIN SOM_SomShipmentHeader h ON h.INVNBR = d.INVNBR AND h.INVSEQ = d.INVSEQ
        JOIN inv_mast i on d.ITMMDL = i.item_id
        WHERE h.INVTYP = 'IV'
        AND (d.WHS = 'OHT' or d.WHS = 'ILT')
      ")]
        public string SqlQueryGetInventory {
            get {
                return ((string)(this["SqlQueryGetInventory"]));
            }
            set {
                this["SqlQueryGetInventory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://jtdsql02.jtdinc.local:3080/api")]
        public string rootUri {
            get {
                return ((string)(this["rootUri"]));
            }
            set {
                this["rootUri"] = value;
            }
        }
    }
}
